<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:import href="TeamFoundation.xsl"/> <!-- Common TeamSystem elements -->
<xsl:output indent="no"/>
<xsl:template match="/">
<xsl:call-template name="link">
<xsl:with-param name="format" select="'text'"/>
<xsl:with-param name="link" select="CheckinEvent/Artifacts/Artifact[@ArtifactType='Changeset']/Url"/>
<xsl:with-param name="displayText" select="CheckinEvent/ContentTitle"/>
</xsl:call-template>
<xsl:text>&#xA;</xsl:text>
<xsl:value-of select="$textSeparatorLong"/>
<xsl:text>&#xA;</xsl:text>
<xsl:if test="string-length(CheckinEvent/Notice) > 0">
<xsl:value-of select="CheckinEvent/Notice"/>
<xsl:text>&#xA;</xsl:text>
</xsl:if>
Team Project(s): <xsl:value-of select="CheckinEvent/TeamProject"/>
<xsl:choose>
<xsl:when test="CheckinEvent/Owner != CheckinEvent/Committer">
Checked in on behalf of: <xsl:variable name="owner" select="substring-after(CheckinEvent/Owner,'\')"/>
<xsl:if test="$owner=''">
<xsl:value-of select="CheckinEvent/Owner"/>
</xsl:if>
<xsl:if test="$owner!=''">
<xsl:value-of select="$owner"/>
</xsl:if>
</xsl:when>
<xsl:when test="CheckinEvent/Owner = CheckinEvent/Committer">
Checked in by: <xsl:variable name="owner" select="substring-after(CheckinEvent/Owner,'\')"/>
<xsl:if test="$owner=''">
<xsl:value-of select="CheckinEvent/Owner"/>
</xsl:if>
<xsl:if test="$owner!=''">
<xsl:value-of select="$owner"/>
</xsl:if>
</xsl:when>
</xsl:choose>
<xsl:if test="string-length(CheckinEvent/Committer) > 0">
<!-- only print if commiter != owner ) -->
<xsl:if test="CheckinEvent/Owner != CheckinEvent/Committer">
Checked in by: <xsl:variable name="cmtr" select="substring-after(CheckinEvent/Committer,'\')"/>
<xsl:if test="$cmtr=''">
<xsl:value-of select="CheckinEvent/Committer"/>
</xsl:if>
<xsl:if test="$cmtr!=''">
<xsl:value-of select="$cmtr"/>
</xsl:if>
</xsl:if>
</xsl:if>
Checked in on: <xsl:value-of select="CheckinEvent/CreationDate"/>
<xsl:variable name="ckinNoteCount" select="count(CheckinEvent/CheckinNotes/CheckinNote)"/>
<xsl:text>&#xA;</xsl:text>
<xsl:if test="$ckinNoteCount > 0"> 
<xsl:for-each select="CheckinEvent/CheckinNotes/CheckinNote">
<xsl:variable name="valueLength" select="string-length(@val)"/>
<xsl:value-of select="concat(@name,':')"/>
<xsl:if test="$valueLength > 0">
<xsl:value-of select="concat(' ',@val)"/>
</xsl:if>
<xsl:if test="$valueLength = 0">
<xsl:text> None</xsl:text>
</xsl:if>
<!-- force a line break after each checkin note -->
<xsl:text>&#xA;</xsl:text>
</xsl:for-each>
</xsl:if>
Comment: <xsl:variable name="commentLength" select="string-length(CheckinEvent/Comment)"/><xsl:if test="$commentLength > 0"><xsl:value-of select="CheckinEvent/Comment"/></xsl:if><xsl:if test="$commentLength = 0">None</xsl:if>
<xsl:if test="string-length(CheckinEvent/PolicyOverrideComment) > 0">
<xsl:text>&#xA;</xsl:text>
Policy Override Reason: <xsl:value-of select="CheckinEvent/PolicyOverrideComment"/>
</xsl:if>
<xsl:if test="count(CheckinEvent/CheckinInformation/CheckinInformation[@CheckinAction='Resolve']) > 0">
<xsl:text>&#xA;&#xA;</xsl:text>
<xsl:text>--------------- RESOLVED WORK ITEMS ----------------</xsl:text>
<xsl:for-each select="CheckinEvent/CheckinInformation/CheckinInformation[@CheckinAction='Resolve']">
Type: <xsl:value-of select="@Type"/>
ID: <xsl:call-template name="link"> <xsl:with-param name="format" select="'text'"/> <xsl:with-param name="link" select="@Url"/> <xsl:with-param name="displayText" select="@Id"/> </xsl:call-template>
Title: <xsl:value-of select="@Title"/>
Status: <xsl:value-of select="@State"/>
Assigned To: <xsl:variable name="assignedToLength" select="string-length(@AssignedTo)"/>
<xsl:if test="$assignedToLength > 0">
<xsl:value-of select="@AssignedTo"/></xsl:if>
<xsl:if test="$assignedToLength = 0">N/A</xsl:if>
<xsl:text>&#xA;</xsl:text>
</xsl:for-each>
</xsl:if>
<xsl:if test="count(CheckinEvent/CheckinInformation/CheckinInformation[@CheckinAction='Associate']) > 0">
<xsl:text>&#xA;</xsl:text>
<xsl:text>--------------- ASSOCIATED WORK ITEMS ----------------</xsl:text>
<xsl:for-each select="CheckinEvent/CheckinInformation/CheckinInformation[@CheckinAction='Associate']">
Type: <xsl:value-of select="@Type"/>
ID: <xsl:call-template name="link"> <xsl:with-param name="format" select="'text'"/> <xsl:with-param name="link" select="@Url"/> <xsl:with-param name="displayText" select="@Id"/> </xsl:call-template>
Title: <xsl:value-of select="@Title"/>
Status: <xsl:value-of select="@State"/>
Assigned To: <xsl:variable name="assignedToLength" select="string-length(@AssignedTo)"/>
<xsl:if test="$assignedToLength > 0">
<xsl:value-of select="@AssignedTo"/></xsl:if>
<xsl:if test="$assignedToLength = 0">N/A</xsl:if>
<xsl:text>&#xA;</xsl:text>
</xsl:for-each>
</xsl:if>
<xsl:if test="count(CheckinEvent/PolicyFailures/PolicyFailure) > 0"> 
<xsl:text>&#xA;</xsl:text>
<xsl:text>--------------- POLICY FAILURES ----------------</xsl:text>
<xsl:for-each select="CheckinEvent/PolicyFailures/PolicyFailure">
Type: <xsl:value-of select="@name"/>
<xsl:variable name="valueLength" select="string-length(@val)"/>
Description: <xsl:if test="$valueLength > 0"><xsl:value-of select="@val"/></xsl:if>
<xsl:if test="$valueLength = 0"><xsl:value-of select='None'/></xsl:if>
<xsl:text>&#xA;</xsl:text>
</xsl:for-each>
</xsl:if>
<xsl:if test="count(CheckinEvent/Artifacts/Artifact[@ArtifactType='VersionedItem']) > 0"> 
<xsl:text>&#xA;</xsl:text>
<xsl:text>--------------- ITEMS ----------------</xsl:text>
<xsl:for-each select="CheckinEvent/Artifacts/Artifact[@ArtifactType='VersionedItem']">
Name: <xsl:call-template name="link">
<xsl:with-param name="format" select="'text'"/>
<xsl:with-param name="link" select="Url"/>
<xsl:with-param name="displayText" select="@Item"/>
</xsl:call-template>
Change: <xsl:value-of select="@ChangeType"/>
Folder: <xsl:value-of select="@Folder" />
<xsl:text>&#xA;</xsl:text>
</xsl:for-each>
<xsl:if test="CheckinEvent/AllChangesIncluded = 'false'">
<xsl:text>&#xA;</xsl:text>
<xsl:call-template name="link">
<xsl:with-param name="format" select="'text'"/>
<xsl:with-param name="link" select="CheckinEvent/Artifacts/Artifact[@ArtifactType='Changeset']/Url"/>
<xsl:with-param name="displayText" select="$morePrompt"/>
</xsl:call-template>
</xsl:if>
</xsl:if>
<xsl:call-template name="footer">
<xsl:with-param name="format" select="'text'"/>
<xsl:with-param name="alertOwner" select="CheckinEvent/Subscriber"/>
<xsl:with-param name="timeZoneOffset" select="CheckinEvent/TimeZoneOffset"/>
<xsl:with-param name="timeZoneName" select="CheckinEvent/TimeZone"/>
</xsl:call-template>
</xsl:template>
</xsl:stylesheet>
