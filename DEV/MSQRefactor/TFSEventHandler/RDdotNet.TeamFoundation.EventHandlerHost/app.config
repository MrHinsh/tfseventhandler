<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <system.diagnostics>
        <sources>
            <!-- This section defines the logging configuration for My.Application.Log -->
            <source name="DefaultSource" switchName="DefaultSwitch">
                <listeners>
                    <add name="FileLog"/>
                    <!-- Uncomment the below section to write to the Application Event Log -->
                    <!--<add name="EventLog"/>-->
                </listeners>
            </source>
        </sources>
        <switches>
            <add name="DefaultSwitch" value="Information" />
        </switches>
        <sharedListeners>
            <add name="FileLog"
                 type="Microsoft.VisualBasic.Logging.FileLogTraceListener, Microsoft.VisualBasic, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"
                 initializeData="FileLogWriter"/>
            <!-- Uncomment the below section and replace APPLICATION_NAME with the name of your application to write to the Application Event Log -->
            <!--<add name="EventLog" type="System.Diagnostics.EventLogTraceListener" initializeData="APPLICATION_NAME"/> -->
        </sharedListeners>
    </system.diagnostics>
    <system.serviceModel>
        <bindings>
          <netMsmqBinding>
            <binding name="NetMsmqBinding_IEvents" closeTimeout="00:01:00"
              openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
              deadLetterQueue="System" durable="true" exactlyOnce="true"
              maxReceivedMessageSize="65536" maxRetryCycles="2" receiveErrorHandling="Fault"
              receiveRetryCount="5" retryCycleDelay="00:30:00" timeToLive="1.00:00:00"
              useSourceJournal="false" useMsmqTracing="false" queueTransferProtocol="Native"
              maxBufferPoolSize="524288" useActiveDirectory="false">
              <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                  maxBytesPerRead="4096" maxNameTableCharCount="16384" />
              <security mode="Message">
                <transport msmqAuthenticationMode="WindowsDomain" msmqEncryptionAlgorithm="RC4Stream"
                    msmqProtectionLevel="Sign" msmqSecureHashAlgorithm="Sha1" />
                <message clientCredentialType="Windows" />
              </security>
            </binding>
            <binding name="SecureMsqBinding">
              <security mode="Message" />
            </binding>
          </netMsmqBinding>
          <wsDualHttpBinding>
            <binding name="WSDualHttpBinding_IHandlers" closeTimeout="00:01:00"
             openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00"
             bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard"
             maxBufferPoolSize="524288" maxReceivedMessageSize="65536"
             messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true">
              <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
                  maxBytesPerRead="4096" maxNameTableCharCount="16384" />
              <reliableSession ordered="true" inactivityTimeout="00:10:00" />
              <security mode="Message">
                <message clientCredentialType="Windows" negotiateServiceCredential="true"
                    algorithmSuite="Default" />
              </security>
            </binding>
                <binding name="SecureDualHttpBinding" maxReceivedMessageSize="655360">
                    <readerQuotas maxStringContentLength="655360" maxArrayLength="655360" />
                    <security mode="Message">
                        <message clientCredentialType="Windows" negotiateServiceCredential="true"
                            algorithmSuite="Default" />
                    </security>
                </binding>
            </wsDualHttpBinding>
            <wsHttpBinding>
                <binding name="SecureHttpBinding">
                    <security mode="Message">
                        <message clientCredentialType="Windows" negotiateServiceCredential="true"
                            algorithmSuite="Default" />
                    </security>
                </binding>
            </wsHttpBinding>
        </bindings>
		<services>
      <service behaviorConfiguration="Behavior" name="RDdotNet.TeamFoundation.Services.EventHandlerService">
          <endpoint address="Handlers" binding="wsDualHttpBinding" bindingConfiguration="SecureDualHttpBinding"
              contract="RDdotNet.TeamFoundation.Services.Contracts.IHandlers"
              listenUriMode="Explicit" />
          <endpoint address="" binding="netMsmqBinding" bindingConfiguration="SecureMsqBinding"
              contract="RDdotNet.TeamFoundation.Services.Contracts.IEvents" />
          <endpoint address="mex" binding="wsHttpBinding" bindingConfiguration="SecureHttpBinding"
              contract="IMetadataExchange" />
          <host>
              <baseAddresses>
                  <add baseAddress="net.msmq://localhost/private/TFSEventHandler" />
                  <add baseAddress="http://localhost:6661/TFSEventHandler" />
              </baseAddresses>
          </host>
      </service>
      <service name="RDdotNet.TeamFoundation.Services.QueuerService">
          <clear />
          <endpoint address="TeamServers" binding="wsDualHttpBinding" bindingConfiguration="SecureDualHttpBinding"
              contract="RDdotNet.TeamFoundation.Services.Contracts.ITeamServers"
              listenUriMode="Explicit">
              <identity>
                  <certificateReference storeName="My" storeLocation="LocalMachine"
                      x509FindType="FindBySubjectDistinguishedName" />
              </identity>
          </endpoint>
          <endpoint address="Subscriptions" binding="wsDualHttpBinding"
              bindingConfiguration="SecureDualHttpBinding" contract="RDdotNet.TeamFoundation.Services.Contracts.ISubscriptions" />
          <host>
              <baseAddresses>
                  <add baseAddress="net.msmq://localhost/private/TFSEventHandler" />
                  <add baseAddress="http://localhost:6661/TFSQueuer" />
              </baseAddresses>
          </host>
      </service>
  </services>
      <client>
        <endpoint address="http://localhost:6661/TFSEventHandler/Handlers"
            binding="wsDualHttpBinding" bindingConfiguration="WSDualHttpBinding_IHandlers"
            contract="EventHandlerService.IHandlers" name="WSDualHttpBinding_IHandlers">
        </endpoint>
        <endpoint address="net.msmq://localhost/private/TFSEventHandler"
            binding="netMsmqBinding" bindingConfiguration="NetMsmqBinding_IEvents"
            contract="EventHandlerService.IEvents" name="NetMsmqBinding_IEvents">
        </endpoint>
      </client>
		<behaviors>
      <serviceBehaviors>
          <behavior name="Behavior">
              <serviceDebug includeExceptionDetailInFaults="true" />
              <serviceMetadata httpGetEnabled="true" />
          </behavior>
      </serviceBehaviors>
  </behaviors>
    </system.serviceModel>
</configuration>
